name: BuyFly CI + Render Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: buyfly-deploy
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # ---------- Client ----------
      - name: Install Client deps
        working-directory: Client
        run: npm ci || npm install

      - name: Build Client (CRA via script)
        working-directory: Client
        run: bash build.sh

      - name: Upload Client build artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: Client/build

      # ---------- Server ----------
      - name: Install Server deps
        working-directory: Server
        run: npm ci || npm install

      - name: Build Server (tsc)
        working-directory: Server
        run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fail if hooks missing (early)
        run: |
          test -n "${{ secrets.RENDER_CLIENT_HOOK_URL }}" || { echo "Missing RENDER_CLIENT_HOOK_URL secret"; exit 1; }
          test -n "${{ secrets.RENDER_SERVER_HOOK_URL }}" || { echo "Missing RENDER_SERVER_HOOK_URL secret"; exit 1; }

      - name: Trigger Render Server Deploy
        env:
          HOOK: ${{ secrets.RENDER_SERVER_HOOK_URL }}
        run: curl -fsS -X POST "$HOOK"

      # optional: wait a bit so latest server build starts before client deploy
      - name: Pause briefly
        run: sleep 10

      # simple health check (doesn't fail build if it returns non-200)
      - name: Health check (non-blocking)
        run: echo "Skipping live health check (render builds asynchronously)."

      - name: Trigger Render Client Deploy
        env:
          HOOK: ${{ secrets.RENDER_CLIENT_HOOK_URL }}
        run: curl -fsS -X POST "$HOOK"
